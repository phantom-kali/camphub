# Generated by Django 5.2.1 on 2025-07-05 07:01

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course_code",
                    models.CharField(
                        help_text="Course code (e.g., CS 101, MATH 201)", max_length=20
                    ),
                ),
                (
                    "course_name",
                    models.CharField(help_text="Full course name", max_length=200),
                ),
                (
                    "semester",
                    models.CharField(
                        choices=[
                            ("fall", "Fall"),
                            ("spring", "Spring"),
                            ("summer", "Summer"),
                            ("winter", "Winter"),
                        ],
                        help_text="Academic semester",
                        max_length=10,
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="Academic year",
                        validators=[
                            django.core.validators.MinValueValidator(2020),
                            django.core.validators.MaxValueValidator(2030),
                        ],
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Course description and objectives"
                    ),
                ),
                (
                    "max_enrollment",
                    models.IntegerField(
                        default=100,
                        help_text="Maximum number of students",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "enrollment_open",
                    models.BooleanField(
                        default=True, help_text="Whether enrollment is currently open"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the course is currently active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
                "db_table": "academic_courses",
                "ordering": ["-year", "semester", "course_code"],
            },
        ),
        migrations.CreateModel(
            name="CourseEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("ta", "Teaching Assistant"),
                            ("instructor", "Instructor"),
                        ],
                        default="student",
                        help_text="User's role in the course",
                        max_length=20,
                    ),
                ),
                (
                    "enrollment_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Date when enrollment was created"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether enrollment is currently active"
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True, help_text="Final grade (optional)", max_length=5
                    ),
                ),
                (
                    "completion_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when course was completed",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Course Enrollment",
                "verbose_name_plural": "Course Enrollments",
                "db_table": "academic_course_enrollments",
                "ordering": ["-enrollment_date"],
            },
        ),
        migrations.CreateModel(
            name="StudyGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the study group", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the study group's purpose and goals"
                    ),
                ),
                (
                    "max_members",
                    models.IntegerField(
                        default=10,
                        help_text="Maximum number of members allowed",
                        validators=[
                            django.core.validators.MinValueValidator(2),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                (
                    "is_private",
                    models.BooleanField(
                        default=False,
                        help_text="Whether group requires approval to join",
                    ),
                ),
                (
                    "meeting_location",
                    models.CharField(
                        blank=True, help_text="Regular meeting location", max_length=200
                    ),
                ),
                (
                    "meeting_time",
                    models.DateTimeField(
                        blank=True, help_text="Regular meeting time", null=True
                    ),
                ),
                (
                    "meeting_frequency",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly"),
                            ("biweekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                            ("irregular", "Irregular"),
                        ],
                        default="weekly",
                        help_text="How often the group meets",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the study group is currently active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Study Group",
                "verbose_name_plural": "Study Groups",
                "db_table": "academic_study_groups",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StudyGroupMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("member", "Member"), ("moderator", "Moderator")],
                        default="member",
                        help_text="Member's role in the group",
                        max_length=20,
                    ),
                ),
                (
                    "joined_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Date when user joined the group"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether membership is currently active"
                    ),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        blank=True,
                        help_text="Last time member was active in group",
                        null=True,
                    ),
                ),
                (
                    "contributions",
                    models.IntegerField(
                        default=0, help_text="Number of contributions/posts in group"
                    ),
                ),
            ],
            options={
                "verbose_name": "Study Group Member",
                "verbose_name_plural": "Study Group Members",
                "db_table": "academic_study_group_members",
                "ordering": ["-joined_at"],
            },
        ),
    ]
